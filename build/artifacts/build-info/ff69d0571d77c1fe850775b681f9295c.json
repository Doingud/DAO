{
  "id": "ff69d0571d77c1fe850775b681f9295c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/utils/interfaces/IAmorGuildToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\n/// @title  DoinGud Guild Token\n/// @author @daoism.systems, lourenslinde\n/// @notice ERC20 implementation for DoinGudDAO\n\n/**\n *  @dev Implementation of the AMORxGuild token for DoinGud\n *\n *  The contract houses the token logic for AMORxGuild.\n *\n *  It varies from traditional ERC20 implementations by:\n *  1) Allowing the token name to be set with an `init()` function\n *  2) Allowing the token symbol to be set with an `init()` function\n *  3) Enables upgrades through updating the proxy\n */\npragma solidity 0.8.15;\n\ninterface IAmorxGuild {\n    /// Events\n    /// Emitted once token has been initialized\n    event Initialized(string name, string symbol, address amorToken);\n\n    /// Proxy Address Change\n    event ProxyAddressChange(address indexed newProxyAddress);\n\n    function initProxy(address _logic, bytes memory _data) external;\n\n    /// @notice Initializes the AMORxGuild contract\n    /// @dev    Sets the token details as well as the required addresses for token logic\n    /// @param  amorAddress the address of the AMOR token proxy\n    /// @param  name the token name (e.g AMORxIMPACT)\n    /// @param  symbol the token symbol\n    function init(\n        address amorAddress,\n        string memory name,\n        string memory symbol\n    ) external;\n\n    /// @notice Allows a user to stake their AMOR and receive AMORxGuild in return\n    /// @param  to a parameter just like in doxygen (must be followed by parameter name)\n    /// @param  amount uint256 amount of AMOR to be staked\n    /// @return uint256 the amount of AMORxGuild received from staking\n    function stakeAmor(address to, uint256 amount) external returns (uint256);\n\n    /// @notice Allows the user to unstake their AMOR\n    /// @param  amount uint256 amount of AMORxGuild to exchange for AMOR\n    /// @return uint256 the amount of AMOR returned from burning AMORxGuild\n    function withdrawAmor(uint256 amount) external returns (uint256);\n}\n"
      }
    },
    "settings": {
      "viaIR": false,
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/utils/interfaces/IAmorGuildToken.sol": {
        "IAmorxGuild": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "amorToken",
                  "type": "address"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newProxyAddress",
                  "type": "address"
                }
              ],
              "name": "ProxyAddressChange",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "amorAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "name": "init",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_logic",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "initProxy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "stakeAmor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawAmor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "init(address,string,string)": {
                "details": "Sets the token details as well as the required addresses for token logic",
                "params": {
                  "amorAddress": "the address of the AMOR token proxy",
                  "name": "the token name (e.g AMORxIMPACT)",
                  "symbol": "the token symbol"
                }
              },
              "stakeAmor(address,uint256)": {
                "params": {
                  "amount": "uint256 amount of AMOR to be staked",
                  "to": "a parameter just like in doxygen (must be followed by parameter name)"
                },
                "returns": {
                  "_0": "uint256 the amount of AMORxGuild received from staking"
                }
              },
              "withdrawAmor(uint256)": {
                "params": {
                  "amount": "uint256 amount of AMORxGuild to exchange for AMOR"
                },
                "returns": {
                  "_0": "uint256 the amount of AMOR returned from burning AMORxGuild"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "init(address,string,string)": "b2b45df5",
              "initProxy(address,bytes)": "ead30dd4",
              "stakeAmor(address,uint256)": "6845b90a",
              "withdrawAmor(uint256)": "71e6c572"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amorToken\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProxyAddress\",\"type\":\"address\"}],\"name\":\"ProxyAddressChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeAmor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(address,string,string)\":{\"details\":\"Sets the token details as well as the required addresses for token logic\",\"params\":{\"amorAddress\":\"the address of the AMOR token proxy\",\"name\":\"the token name (e.g AMORxIMPACT)\",\"symbol\":\"the token symbol\"}},\"stakeAmor(address,uint256)\":{\"params\":{\"amount\":\"uint256 amount of AMOR to be staked\",\"to\":\"a parameter just like in doxygen (must be followed by parameter name)\"},\"returns\":{\"_0\":\"uint256 the amount of AMORxGuild received from staking\"}},\"withdrawAmor(uint256)\":{\"params\":{\"amount\":\"uint256 amount of AMORxGuild to exchange for AMOR\"},\"returns\":{\"_0\":\"uint256 the amount of AMOR returned from burning AMORxGuild\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Initialized(string,string,address)\":{\"notice\":\"Events Emitted once token has been initialized\"},\"ProxyAddressChange(address)\":{\"notice\":\"Proxy Address Change\"}},\"kind\":\"user\",\"methods\":{\"init(address,string,string)\":{\"notice\":\"Initializes the AMORxGuild contract\"},\"stakeAmor(address,uint256)\":{\"notice\":\"Allows a user to stake their AMOR and receive AMORxGuild in return\"},\"withdrawAmor(uint256)\":{\"notice\":\"Allows the user to unstake their AMOR\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/interfaces/IAmorGuildToken.sol\":\"IAmorxGuild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"contracts/utils/interfaces/IAmorGuildToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @title  DoinGud Guild Token\\n/// @author @daoism.systems, lourenslinde\\n/// @notice ERC20 implementation for DoinGudDAO\\n\\n/**\\n *  @dev Implementation of the AMORxGuild token for DoinGud\\n *\\n *  The contract houses the token logic for AMORxGuild.\\n *\\n *  It varies from traditional ERC20 implementations by:\\n *  1) Allowing the token name to be set with an `init()` function\\n *  2) Allowing the token symbol to be set with an `init()` function\\n *  3) Enables upgrades through updating the proxy\\n */\\npragma solidity 0.8.15;\\n\\ninterface IAmorxGuild {\\n    /// Events\\n    /// Emitted once token has been initialized\\n    event Initialized(string name, string symbol, address amorToken);\\n\\n    /// Proxy Address Change\\n    event ProxyAddressChange(address indexed newProxyAddress);\\n\\n    function initProxy(address _logic, bytes memory _data) external;\\n\\n    /// @notice Initializes the AMORxGuild contract\\n    /// @dev    Sets the token details as well as the required addresses for token logic\\n    /// @param  amorAddress the address of the AMOR token proxy\\n    /// @param  name the token name (e.g AMORxIMPACT)\\n    /// @param  symbol the token symbol\\n    function init(\\n        address amorAddress,\\n        string memory name,\\n        string memory symbol\\n    ) external;\\n\\n    /// @notice Allows a user to stake their AMOR and receive AMORxGuild in return\\n    /// @param  to a parameter just like in doxygen (must be followed by parameter name)\\n    /// @param  amount uint256 amount of AMOR to be staked\\n    /// @return uint256 the amount of AMORxGuild received from staking\\n    function stakeAmor(address to, uint256 amount) external returns (uint256);\\n\\n    /// @notice Allows the user to unstake their AMOR\\n    /// @param  amount uint256 amount of AMORxGuild to exchange for AMOR\\n    /// @return uint256 the amount of AMOR returned from burning AMORxGuild\\n    function withdrawAmor(uint256 amount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x3d36106d48dd3be1db39cacc1915c15378ec4e0781e1a20383894bd5fc7cbc0f\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "events": {
              "Initialized(string,string,address)": {
                "notice": "Events Emitted once token has been initialized"
              },
              "ProxyAddressChange(address)": {
                "notice": "Proxy Address Change"
              }
            },
            "kind": "user",
            "methods": {
              "init(address,string,string)": {
                "notice": "Initializes the AMORxGuild contract"
              },
              "stakeAmor(address,uint256)": {
                "notice": "Allows a user to stake their AMOR and receive AMORxGuild in return"
              },
              "withdrawAmor(uint256)": {
                "notice": "Allows the user to unstake their AMOR"
              }
            },
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/utils/interfaces/IAmorGuildToken.sol": {
        "ast": {
          "absolutePath": "contracts/utils/interfaces/IAmorGuildToken.sol",
          "exportedSymbols": {
            "IAmorxGuild": [
              51
            ]
          },
          "id": 52,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "530:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAmorxGuild",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 51,
              "linearizedBaseContracts": [
                51
              ],
              "name": "IAmorxGuild",
              "nameLocation": "565:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2,
                    "nodeType": "StructuredDocumentation",
                    "src": "583:58:0",
                    "text": "Events\n Emitted once token has been initialized"
                  },
                  "eventSelector": "2d91d6d870a160ae226bba06eb7e3d58dac90fbc97ef11c41fc758ebdce7ec77",
                  "id": 10,
                  "name": "Initialized",
                  "nameLocation": "652:11:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "671:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "664:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "684:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "677:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amorToken",
                        "nameLocation": "700:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "692:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "692:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:47:0"
                  },
                  "src": "646:65:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "717:24:0",
                    "text": "Proxy Address Change"
                  },
                  "eventSelector": "57c48d83e41a6c5b8132203b083d7b709cb44cff3933781c660576e8e5470f42",
                  "id": 15,
                  "name": "ProxyAddressChange",
                  "nameLocation": "752:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newProxyAddress",
                        "nameLocation": "787:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 15,
                        "src": "771:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "770:33:0"
                  },
                  "src": "746:58:0"
                },
                {
                  "functionSelector": "ead30dd4",
                  "id": 22,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initProxy",
                  "nameLocation": "819:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "_logic",
                        "nameLocation": "837:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "829:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "829:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "858:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 22,
                        "src": "845:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "828:36:0"
                  },
                  "returnParameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "873:0:0"
                  },
                  "scope": 51,
                  "src": "810:64:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "880:294:0",
                    "text": "@notice Initializes the AMORxGuild contract\n @dev    Sets the token details as well as the required addresses for token logic\n @param  amorAddress the address of the AMOR token proxy\n @param  name the token name (e.g AMORxIMPACT)\n @param  symbol the token symbol"
                  },
                  "functionSelector": "b2b45df5",
                  "id": 32,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "init",
                  "nameLocation": "1188:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "amorAddress",
                        "nameLocation": "1210:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1202:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1202:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "1245:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1231:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1231:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "1273:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1259:20:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1192:93:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1294:0:0"
                  },
                  "scope": 51,
                  "src": "1179:116:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1301:297:0",
                    "text": "@notice Allows a user to stake their AMOR and receive AMORxGuild in return\n @param  to a parameter just like in doxygen (must be followed by parameter name)\n @param  amount uint256 amount of AMOR to be staked\n @return uint256 the amount of AMORxGuild received from staking"
                  },
                  "functionSelector": "6845b90a",
                  "id": 42,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeAmor",
                  "nameLocation": "1612:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1630:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1622:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1642:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1634:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:28:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "1668:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1668:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1667:9:0"
                  },
                  "scope": 51,
                  "src": "1603:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "1683:198:0",
                    "text": "@notice Allows the user to unstake their AMOR\n @param  amount uint256 amount of AMORxGuild to exchange for AMOR\n @return uint256 the amount of AMOR returned from burning AMORxGuild"
                  },
                  "functionSelector": "71e6c572",
                  "id": 50,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAmor",
                  "nameLocation": "1895:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1916:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1908:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1908:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1907:16:0"
                  },
                  "returnParameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1942:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1942:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1941:9:0"
                  },
                  "scope": 51,
                  "src": "1886:65:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 52,
              "src": "555:1398:0",
              "usedErrors": []
            }
          ],
          "src": "530:1424:0"
        },
        "id": 0
      }
    }
  }
}
